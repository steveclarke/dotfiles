# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $up k
set $down j
set $left h
set $right l

set $wallpaper ~/Pictures/Wallpapers/3.jpg

set $terminal alacritty
set $browser google-chrome

set $main-mon "DisplayPort-0"
set $left-mon "DisplayPort-2"
set $right-mon "DisplayPort-1"

# Configure monitor layout (used arandr to determine this)
exec --no-startup-id xrandr --output $left-mon --auto --left-of $main-mon
exec --no-startup-id xrandr --output $main-mon --auto --primary
exec --no-startup-id xrandr --output $right-mon --auto --right-of $main-mon

# Compositor
exec_always --no-startup-id picom -b

# Set wallpaper
exec_always --no-startup-id feh --bg-scale $wallpaper

# Change caps-lock to a ctrl key
exec_always --no-startup-id setxkbmap -option ctrl:nocaps

# exec--no-startup-id i3-msg "workspace $ws5; exec google-chrome https://music.home.avint.net"

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
font pango:FiraMono Nerd Font 14
title_align center

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec $terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec "rofi -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in vertical orientation
bindsym $mod+v split v

# split in horizontal orientation
bindsym $mod+Shift+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Main"
set $ws2 "2: Development"
set $ws3 "3: Game"
set $ws4 "4: Productivity"
set $ws5 "5: Development Supplementary"
set $ws6 "6: Database"
set $ws7 "7: Chat"
set $ws8 "8: Docs"
set $ws9 "9"
set $ws10 "10: Music"

workspace $ws1 output $main-mon
workspace $ws2 output $main-mon
workspace $ws3 output $main-mon
workspace $ws4 output $left-mon
workspace $ws5 output $left-mon
workspace $ws6 output $left-mon
workspace $ws7 output $left-mon
workspace $ws8 output $right-mon
workspace $ws9 output $right-mon
workspace $ws10 output $left-mon

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Open a blank container - useful when you don't want a program to take up the entire screen
# bindsym $mod+o exec i3 open

set $mode_open Open: [a]uthy [b]rowser [n]otes 1[p]assword
bindsym $mod+o mode "$mode_open"
mode "$mode_open" {
 bindsym a exec flatpak run com.authy.Authy; mode "default"
 bindsym b exec $browser; mode "default"
 bindsym n exec flatpak run md.obsidian.Obsidian; mode "default"
 bindsym p exec /usr/bin/1password; mode "default"
 bindsym Return mode "default"
 bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
      # These bindings trigger as soon as you enter the resize mode

      # Pressing left will shrink the window’s width.
      # Pressing right will grow the window’s width.
      # Pressing up will shrink the window’s height.
      # Pressing down will grow the window’s height.
      bindsym $left resize shrink width 10 px or 10 ppt
      bindsym $down resize grow height 10 px or 10 ppt
      bindsym $up resize shrink height 10 px or 10 ppt
      bindsym $right resize grow width 10 px or 10 ppt

      # same bindings, but for the arrow keys
      bindsym Left resize shrink width 10 px or 10 ppt
      bindsym Down resize grow height 10 px or 10 ppt
      bindsym Up resize shrink height 10 px or 10 ppt
      bindsym Right resize grow width 10 px or 10 ppt

      # back to normal: Enter or Escape or $mod+r
      bindsym Return mode "default"
      bindsym Escape mode "default"
      bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  position top
  status_command i3status
}

# gaps inner 10px

# Always show borders, even for apps that don't request them
for_window [class=.*] border normal 1

# Find application class names using `xprop`
assign [class="Todoist"] $ws4
assign [class="Slack"] $ws4
assign [class="1Password"] $ws4
assign [class="Spotify"] $ws10
assign [class="Telegram"] $ws7
assign [class="whatsapp-desktop-linux"] $ws7
assign [class="obsidian"] $ws8

